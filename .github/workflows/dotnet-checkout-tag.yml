name: manual-deploy

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      DOTNET_VERSION: 7.0
      DOCKER_IMAGE_NAME: my-awesome-app
      
    steps:
      # Checkout the code in tag
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tag }}
          token: ${{ secrets.ADMIN_TOKEN }}
          
      # Set up .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      # Build and publish the .NET app
      - name: Publish
        run: dotnet publish -c Release -o publish
        
      # Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .
        
      # Save Docker image as tar file
      - name: Save Docker image as tar file
        run: docker save ${{ env.DOCKER_IMAGE_NAME }}:latest | gzip > my-awesome-app.tar.gz

      # Copy Docker image to remote machine
      - name: Copy Docker image to remote machine
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.MACHINE_IP }}
          username: ${{ secrets.MACHINE_USERNAME }}
          password: ${{ secrets.MACHINE_PASSWORD }}
          port: ${{ secrets.MACHINE_PORT }}
          source: my-awesome-app.tar.gz
          target: ~/tmp/my-awesome-app.tar.gz

      # Load Docker image on remote machine (for Production)
      - name: Load Docker image on remote machine
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MACHINE_IP }}
          username: ${{ secrets.MACHINE_USERNAME }}
          password: ${{ secrets.MACHINE_PASSWORD }}
          port: ${{ secrets.MACHINE_PORT }}
          script: |
            docker load < ~/tmp/my-awesome-app.tar.gz/my-awesome-app.tar.gz
            docker stop my-awesome-app-production || true
            docker rm my-awesome-app-production || true
            docker run -d --name=my-awesome-app-production -p 8001:5000 -p 8002:5001 -v /home/zbox/appsettings/appsettings.Production.json:/app/appsettings.Development.json:ro -e DOTNET_ENVIRONMENT=Production ${{ env.DOCKER_IMAGE_NAME }}:latest
